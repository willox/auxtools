name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
        - os: ubuntu-latest
          TOOLCHAIN: stable-i686-unknown-linux-gnu
          TARGET: i686-unknown-linux-gnu

        - os: windows-latest
          TOOLCHAIN: stable-i686-pc-windows-msvc
          TARGET: i686-pc-windows-msvc

    steps:
    - uses: actions/checkout@v2

    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install Ubuntu Deps
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt install libc6-i386
        sudo apt install libstdc++6:i386
        sudo apt install build-essential g++-multilib
        sudo apt install libssl-dev:i386
        sudo apt install zlib1g-dev:i386

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{matrix.TOOLCHAIN}}
        target: ${{matrix.TARGET}}
        override: true

    - name: Build
      run: cargo build --target=${{matrix.TARGET}} --release --verbose

    - uses: actions/upload-artifact@v2
      if: matrix.os == 'windows-latest'
      with:
        name: debug-server-windows
        path: |
          target/i686-pc-windows-msvc/release/debug_server.dll
          target/i686-pc-windows-msvc/release/debug_server.pdb

    - name: Run tests
      run: cargo test --target=${{matrix.TARGET}} --verbose
