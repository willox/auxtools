name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
        - os: ubuntu-latest
          TOOLCHAIN: stable-i686-unknown-linux-gnu
          TARGET: i686-unknown-linux-gnu

        - os: windows-latest
          TOOLCHAIN: stable-i686-pc-windows-msvc
          TARGET: i686-pc-windows-msvc

    steps:
    - uses: actions/checkout@v2

    - name: Cache Rust dependencies
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ matrix.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ matrix.OS }}-build-

    - name: Install Ubuntu Deps
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt install build-essential g++-multilib libc6-i386 libstdc++6:i386

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{matrix.TOOLCHAIN}}
        target: ${{matrix.TARGET}}
        override: true

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose
