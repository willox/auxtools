var searchIndex = JSON.parse('{\
"auxcov":{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"auxtest":{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"auxtools":{"doc":"For when BYOND is not enough. Probably often.","t":"RGDHDDDDCDLLLLLLLLLLLLLLLLLOOLLLLLLLLLLLLCLALMLLLLOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLXLLLLLLLLLLLXMXLLLLLLCLLLLLMLLLLLLLMOMALOXLLLXOOOALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLMOLLDDMMLLLLMMMLLMLLMMLMMMMLLLLLLMAAAAAAAHHHHFHFHFHFHFHFHFHFHFHFHFHFHFHFHHFHFHFHDDDMMLLLLLLLLLLLLLLLMMLLLLLLLLLLMIDDDDDDDTTDDDDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLFLLLLFFLLLLLLLLLLLLLLLLLMMMMMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDMMMLLLLLLLLLLLLMMMMMMLLMMMLMMLLLLLLMLLLLLLLLMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLMDDDLLLLLLLLLLMLLLLLLLLLLLLMMMMLLLLLLLLLLLMMLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDTENNNNLLLLLLLLLLLLMLLLLLLLLLLMLLLMMMMLLLLLLLLLLLLLLDLLMMLLLLLDLLOLLLLLLL","n":["BYONDCORE","DMResult","List","PIN_DLL","Proc","Runtime","StringRef","Value","VariableNameIdTable","WeakValue","append","as_list","as_number","as_string","as_weak","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byond_ffi_fn","byond_string","bytecode","bytecode_mut_ptr","call","call","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","ctor","data","debug","drop","entry","eq","file_name","find","find_override","find_signature","find_signature_inner","find_signatures","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_id","from_id","from_iter","from_raw","from_raw","from_raw_owned","from_string","from_string_raw","from_value","from_value","from_variable_id","full_shutdown","get","get","get_hash","get_id","get_list","get_number","get_string","get_type","globals","hash","hook","hook","id","init","into","into","into","into","into","into","inventory","is_exact_type","is_list","is_truthy","len","local_names","message","new","new","new","new","null","override_id","parameter_names","path","pin_dll","raw","raw_types","remove","runtime","runtime_handler","set","set","set_bytecode","shutdown","signature","signature_struct","signatures","sigscan","to_dmstring","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","turf","turf_by_id","turf_by_id_unchecked","type_id","type_id","type_id","type_id","type_id","type_id","universal_signature","upgrade","upgrade_or_null","value","version_dependent_signature","with_size","world","CallStacks","StackFrame","active","args","borrow","borrow","borrow_mut","borrow_mut","context","dot","file_name","from","from","instance","into","into","line_number","locals","new","offset","proc","src","suspended","try_from","try_from","try_into","try_into","type_id","type_id","usr","funcs","lists","misc","procs","strings","values","variables","CURRENT_EXECUTION_CONTEXT","SUSPENDED_PROCS","SUSPENDED_PROCS_BUFFER","VARIABLE_NAMES","append_to_list","append_to_list_byond","call_datum_proc_by_name","call_datum_proc_by_name_byond","call_proc_by_id","call_proc_by_id_byond","create_list","create_list_byond","dec_ref_count","dec_ref_count_byond","get_assoc_element","get_assoc_element_byond","get_length","get_length_byond","get_misc_by_id","get_misc_by_id_byond","get_proc_array_entry","get_proc_array_entry_byond","get_string_id","get_string_id_byond","get_string_table_entry","get_string_table_entry_byond","get_variable","get_variable_byond","inc_ref_count","inc_ref_count_byond","remove_from_list","remove_from_list_byond","runtime_byond","set_assoc_element","set_assoc_element_byond","set_variable","set_variable_byond","to_string","to_string_byond","AssociativeListEntry","List","ListId","allocated","assoc_part","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from","into","into","into","length","refcount","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vector_part","AsMiscId","BytecodeId","Bytecode_V1","Bytecode_V2","LocalsId","Locals_V1","Locals_V2","MiscId","Misc_V1","Misc_V2","ParametersData","ParametersId","Parameters_V1","Parameters_V2","as_misc_id","as_misc_id","as_misc_id","as_misc_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytecode","bytecode","bytecode","bytecode","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count","count","count","count","data","data","eq","eq","eq","eq","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytecode","get_hash","get_hash","get_hash","get_hash","get_locals","get_parameters","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","locals","locals","name","names","names","parameters","parameters","set_bytecode","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ExecutionContext","ProcEntry","ProcId","ProcInstance","SuspendedProcs","SuspendedProcsBuffer","args","args_count","back","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","bytecode","bytecode","bytecode_offset","capacity","category","clone","clone_into","context","desc","dot","eq","filename","flags","from","from","from","from","from","from","front","get_hash","hash","into","into","into","into","into","into","line","locals","locals","locals_count","mega_hack","name","parameters","parent_context","path","proc","proc_instance","src","time_to_resume","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","usr","StringEntry","StringId","VariableId","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","eq","fmt","fmt","fmt","from","from","from","get_hash","hash","into","into","into","left","ref_count","right","this","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unk_1","unk_2","valid","Appearance","Area","AreaContents","AreaOverlays","AreaTypepath","AreaUnderlays","AreaVars","ArgList","Client","ClientVars","Datum","GlobalVars","Image","ImageOverlays","ImageUnderlays","ImageVars","ImageVisContents","List","Mob","MobContents","MobOverlays","MobTypepath","MobUnderlays","MobVars","MobVisContents","MobVisLocs","Null","Number","Obj","ObjContents","ObjOverlays","ObjTypepath","ObjUnderlays","ObjVars","ObjVisContents","ObjVisLocs","Resource","SaveFile","String","Turf","TurfContents","TurfOverlays","TurfTypepath","TurfUnderlays","TurfVars","TurfVisContents","TurfVisLocs","Value","ValueData","ValueTag","Vars","World","WorldContents","WorldVars","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","data","eq","fmt","fmt","fmt","fmt","from","from","from","get_hash","hash","id","into","into","into","list","number","string","tag","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","VariableNameIdTable","borrow","borrow_mut","count","entries","from","into","try_from","try_into","type_id","Scanner","borrow","borrow_mut","convert_signature","find","for_module","from","into","try_from","try_into","type_id"],"q":["auxtoolsauxtools::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types","","","","","","","auxtools::raw_types::funcs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::lists","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::miscauxtools::raw_types::procs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::strings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::values","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auxtools::raw_types::variables","","","","","","","","","","auxtools::sigscan","","","","","","","","","",""],"d":["","","A wrapper around Values that make working with lists a …","","Used to hook and call procs.","Represents a byond runtime, sort of. This will probably …","A wrapper around Values that make working with strings a …","<code>Value</code> represents any value a DM variable can hold, such as …","","A weak reference to some datum or atom in the game.","","Check if the current value is a list and casts it.","Check if the current value is a number and casts it.","Check if the current value is a string and casts it.","Creates a <code>WeakValue</code> referencing this datum.","","","","","","","","","","","","","Creates a normal byond ffi function that can be called in …","","","","Calls a method of the value with the given arguments.","Calls a global proc with the given arguments.","","","","","","","","","Used by the [pin_dll] macro to set dll pinning","","","","","","","Finds the first proc with the given path","Finds the n’th re-defined proc with the given path","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","blah blah lifetime is not verified with this so use at …","same as from_raw but does not increment the reference …","Creates a Value that references a byond string. Will panic …","","","","","","","Gets a variable by name.","","","Gets a variable by name and safely casts it to a list::List…","Gets a variable by name and safely casts it to a float.","Gets a variable by name and safely casts it to a string.","Gets the type of the Value as a string","Equivalent to DM’s <code>global.vars</code>.","","","The <code>hook</code> attribute is used to define functions that may be …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Used by the hook macro to aggregate all compile-time hooks","Checks whether this Value’s type is equal to <code>typepath</code>.","","","","","","Creates a new empty list.","","Creates a new value from raw tag and data. Use if you know …","","Equivalent to DM’s <code>null</code>.","","","","The <code>pin_dll!</code> macro is used to determine whether the dll …","","","","This macro makes instantiating Runtimes a (little bit) …","","","Sets a variable by name to a given value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets a turf by coordinates.","Gets a turf by ID, with bounds checking.","Gets a turf by ID, without bounds checking. Use turf_by_id …","","","","","","","","Converts the stored raw value to a full fledged <code>Value</code> and …","Same as <code>WeakValue::upgrade</code> but returns a null if the datum …","","","Creates a new list filled with <code>capacity</code> nulls.","Equivalent to DM’s <code>world</code>.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal thing used when interfacing with BYOND. You …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,1,11,2,8,17,7,1,11,2,8,17,7,0,0,8,8,2,8,11,2,8,7,11,2,8,7,0,11,0,2,8,2,8,8,8,0,0,0,11,11,2,2,8,17,1,11,11,2,2,2,2,2,2,2,2,2,2,2,8,17,7,11,8,1,11,2,2,2,2,1,11,11,0,1,2,2,11,2,2,2,2,2,2,8,0,8,0,1,11,2,8,17,7,0,2,1,2,1,8,17,1,11,2,17,2,8,8,8,0,2,0,1,0,0,1,2,8,0,0,0,0,0,2,11,2,8,7,11,2,2,1,11,2,2,2,8,17,7,1,11,2,8,17,7,2,2,2,1,11,2,8,17,7,0,7,7,11,0,1,2,0,0,31,50,50,31,50,31,50,50,50,50,31,50,50,31,50,50,31,50,50,50,31,50,31,50,31,50,31,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,52,51,32,52,51,32,32,32,32,52,51,32,52,51,32,51,51,32,52,51,32,52,51,32,52,51,32,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,34,35,36,54,33,34,35,36,37,38,39,40,41,42,43,44,54,33,34,35,36,37,38,39,40,41,42,43,44,37,38,43,44,33,34,35,36,37,38,39,40,41,42,43,44,33,34,35,36,37,38,39,40,41,42,43,44,41,42,37,38,39,40,41,42,33,34,35,36,54,33,34,35,36,37,38,39,40,41,42,43,44,0,33,34,35,36,0,0,33,34,35,36,54,33,34,35,36,37,38,39,40,41,42,43,44,43,44,54,39,40,43,44,0,33,34,35,36,37,38,39,40,41,42,43,44,54,33,34,35,36,37,38,39,40,41,42,43,44,54,33,34,35,36,37,38,39,40,41,42,43,44,54,33,34,35,36,37,38,39,40,41,42,43,44,0,0,0,0,0,0,55,55,56,57,55,58,59,56,21,57,55,58,59,56,21,59,57,58,58,56,57,21,21,55,57,58,21,58,55,57,55,58,59,56,21,56,21,21,57,55,58,59,56,21,58,57,58,58,55,57,57,58,57,55,58,55,55,21,57,55,58,59,56,21,57,55,58,59,56,21,57,55,58,59,56,21,55,0,0,0,20,24,47,20,24,47,20,24,20,24,47,20,20,24,47,20,24,47,20,20,20,24,47,47,47,47,47,20,24,20,24,47,20,24,47,20,24,47,47,47,20,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,27,27,27,27,27,28,23,27,28,23,27,28,23,27,28,23,23,27,27,27,23,23,27,28,23,27,27,28,27,28,23,28,28,28,23,27,28,23,27,23,27,28,23,27,28,23,27,28,23,0,60,60,60,60,60,60,60,60,60,0,48,48,0,48,48,48,48,48,48,48],"f":[0,0,0,0,0,0,0,0,0,0,[[1,[3,[2]]]],[2,[[4,[1]]]],[2,[[4,[5]]]],[2,[[4,[6]]]],[2,[[4,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[8],[8],[[2,[10,[9]]],4],[8,4],[11,11],[2,2],[8,8],[7,7],[[]],[[]],[[]],[[]],0,[11],0,[2],0,[[2,2],12],[8,[[13,[11]]]],[[[3,[6]]],[[13,[8]]]],[[[3,[6]],14],[[13,[8]]]],0,0,0,[[11,15],16],[[11,15],16],[[2,15],16],[[2,15],16],[[8,15],16],[[17,15],16],[[]],[11,11],[[]],[14,2],[18,2],[2,2],[5,2],[[]],[1,2],[11,2],[19,2],[1,2],[12,2],[11,2],[[]],[[]],[[]],[20,11],[21,[[13,[8]]]],[22,1],[[],[[4,[11]]]],[23,2],[23,2],[[[10,[9]]],4],[[],4],[2,[[4,[1]]]],[2,[[13,[11]]]],[24,11],0,[[1,[3,[2]]],4],[[2,[3,[11]]],4],[[],25],[11,20],[[2,[3,[11]]],[[4,[1]]]],[[2,[3,[11]]],[[4,[5]]]],[[2,[3,[11]]],[[4,[6]]]],[2,[[26,[6,17]]]],[[],2],[2],[8,[[26,[0]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[2,[10,[9]]],12],[2,12],[2,12],[1,14],[8,[[19,[11]]]],0,[[],1],[9,[[4,[11]]]],[[27,28],2],[[[3,[6]]],17],[[],2],[8,14],[8,[[19,[11]]]],0,0,0,0,[[1,[3,[2]]]],0,0,[[1,[3,[2]],[3,[2]]],[[26,[17]]]],[[2,[3,[11]],[3,[2]]],4],[[8,[19,[14]]]],0,0,0,0,0,[2,[[4,[11]]]],[[]],[[]],[[]],[[]],[[],6],[2,[[4,[6]]]],[[],6],[[],26],[[],26],[[],26],[29,[[26,[2]]]],[29,[[26,[2]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[14,14,14],4],[14,4],[14,2],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,[7,[[13,[2]]]],[7,2],0,0,[14,1],[[],2],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],0,[[]],[[]],0,0,[[],31],0,0,0,0,[[],26],[[],26],[[],26],[[],26],[[],30],[[],30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[32,32],[[]],[[32,15],16],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],30],[[],30],[[],30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],33],[34,33],[35,33],[36,33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,45],[42,45],0,0,0,0,0,0,[[33,33],12],[[34,34],12],[[35,35],12],[[36,36],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[[],25],[[],25],[[],25],[[],25],[35],[36],[33],[34],[35],[36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[34,14,46]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[21,21],[[]],0,0,0,[[21,21],12],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],25],[21],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[24,24],[[]],[[]],0,[[20,20],12],[[20,15],16],[[24,15],16],[[47,15],16],[[]],[[]],[[]],[[],25],[20],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],30],[[],30],[[],30],0,0,[20,12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[28,28],[23,23],[[]],[[]],[[]],0,[[27,27],12],[[27,15],16],[[27,15],16],[[23,15],16],[[23,15],16],[[]],[[]],[[]],[[],25],[27],0,[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[],6],[[],6],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],30],[[],30],[[],30],0,[[]],[[]],0,0,[[]],[[]],[[],26],[[],26],[[],30],0,[[]],[[]],0,[48,[[13,[49]]]],[9,[[13,[48]]]],[[]],[[]],[[],26],[[],26],[[],30]],"p":[[3,"List"],[3,"Value"],[8,"Into"],[6,"DMResult"],[15,"f32"],[3,"String"],[3,"WeakValue"],[3,"Proc"],[15,"str"],[8,"AsRef"],[3,"StringRef"],[15,"bool"],[4,"Option"],[15,"u32"],[3,"Formatter"],[6,"Result"],[3,"Runtime"],[15,"i32"],[3,"Vec"],[3,"StringId"],[3,"ProcId"],[8,"IntoIterator"],[3,"Value"],[3,"VariableId"],[15,"u64"],[4,"Result"],[4,"ValueTag"],[19,"ValueData"],[3,"HashMap"],[3,"TypeId"],[3,"CallStacks"],[3,"ListId"],[3,"MiscId"],[3,"BytecodeId"],[3,"LocalsId"],[3,"ParametersId"],[3,"Bytecode_V1"],[3,"Bytecode_V2"],[3,"Locals_V1"],[3,"Locals_V2"],[3,"Parameters_V1"],[3,"Parameters_V2"],[19,"Misc_V1"],[19,"Misc_V2"],[15,"usize"],[15,"u16"],[3,"StringEntry"],[3,"Scanner"],[15,"u8"],[3,"StackFrame"],[3,"List"],[3,"AssociativeListEntry"],[8,"AsMiscId"],[3,"ParametersData"],[3,"ProcInstance"],[3,"SuspendedProcs"],[3,"ProcEntry"],[3,"ExecutionContext"],[3,"SuspendedProcsBuffer"],[3,"VariableNameIdTable"]]},\
"auxtools_impl":{"doc":"","t":"OXXXOXX","n":["convert_signature","full_shutdown","hook","init","pin_dll","runtime_handler","shutdown"],"q":["auxtools_impl","","","","","",""],"d":["","","The <code>hook</code> attribute is used to define functions that may be …","","The <code>pin_dll!</code> macro is used to determine whether the dll …","",""],"i":[0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0],"p":[]},\
"byond_get":{"doc":"","t":"FF","n":["get_zip_url","main"],"q":["byond_get",""],"d":["",""],"i":[0,0],"f":[[[1,1],2],[[]]],"p":[[15,"u32"],[3,"Url"]]},\
"debug_server":{"doc":"","t":"H","n":["DEBUG_SERVER"],"q":["debug_server"],"d":[""],"i":[0],"f":[0],"p":[]},\
"instruction_hooking":{"doc":"","t":"RIIKAKDLLLLLLLLLLLL","n":["INSTRUCTION_HOOKS","InstructionHook","InstructionHookToAny","as_any","disassemble_env","handle_instruction","DisassembleEnv","as_any","borrow","borrow_mut","from","get_proc_name","get_string_data","get_variable_name","into","try_from","try_into","type_id","value_to_string_data"],"q":["instruction_hooking","","","","","","instruction_hooking::disassemble_env","","","","","","","","","","","",""],"d":["","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","",""],"i":[0,0,0,11,0,12,0,3,3,3,3,3,3,3,3,3,3,3,3],"f":[0,0,0,[[],1],0,[2],0,[[],1],[[]],[[]],[[]],[[3,4],[[6,[5]]]],[[3,4],[[6,[[8,[7]]]]]],[[3,4],[[6,[[8,[7]]]]]],[[]],[[],9],[[],9],[[],10],[[3,4,4],[[6,[[8,[7]]]]]]],"p":[[8,"Any"],[3,"ExecutionContext"],[3,"DisassembleEnv"],[15,"u32"],[3,"String"],[4,"Option"],[15,"u8"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[8,"InstructionHookToAny"],[8,"InstructionHook"]]},\
"test_runner":{"doc":"","t":"IFAKFFFFFFF","n":["ByondCommand","main","paths","with_byond_paths","find_byond","find_byond_bin","find_dll","find_dm","find_dmb","find_dme","find_dreamdaemon"],"q":["test_runner","","","","test_runner::paths","","","","","",""],"d":["","","","","","","","","","",""],"i":[0,0,0,2,0,0,0,0,0,0,0],"f":[0,[[]],0,[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1]],"p":[[3,"PathBuf"],[8,"ByondCommand"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
